// Generated by CoffeeScript 1.7.1
(function() {
  var instrument, instruments, q, use, wrap;

  q = require('q');

  instruments = [];

  instrument = function(thing) {
    return wrap(require(thing));
  };

  wrap = function(module) {
    return function(message) {
      var deferred, process, _i, _len;
      deferred = q.defer();
      module(message).then(function(result) {
        return process('resolve', result);
      }).fail(function(err) {
        return process('reject', err);
      }).progress(function(update) {
        return process('notify', update);
      });
      for (_i = 0, _len = instruments.length; _i < _len; _i++) {
        instrument = instruments[_i];
        instrument({
          status: 'request',
          data: message
        });
      }
      process = function(status, output) {
        var data, _j, _len1, _results;
        deferred[status](output);
        _results = [];
        for (_j = 0, _len1 = instruments.length; _j < _len1; _j++) {
          instrument = instruments[_j];
          data = {
            status: status,
            data: output
          };
          if (message.action) {
            data.action = message.action;
          }
          _results.push(instrument(data));
        }
        return _results;
      };
      return deferred.promise;
    };
  };

  use = function(instrument) {
    return instruments.push(instrument);
  };

  module.exports = {
    instrument: instrument,
    use: use
  };

}).call(this);
